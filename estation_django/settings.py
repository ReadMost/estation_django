"""
Django settings for estation_django project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

TOKEN_EXPIRED_AFTER_SECONDS = 3000000

APPEND_SLASH=False
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

MEDIA_URL =  '/media/'
MEDIA_ROOT = os.path.join('', "media")
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/



# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8r$!0#t$3^@!m6x@uva+)&8im30vp6rf7r-d4gn2xpz8bmpki-'



# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'rest_framework.authtoken',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'users.apps.UsersConfig',
    'trains.apps.TrainsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
AUTH_USER_MODEL = 'users.CustomUser'
ROOT_URLCONF = 'estation_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'estation_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.contrib.gis.db.backends.postgis',

        'NAME': os.getenv('DEFAULT_DB_NAME') if os.getenv('DEFAULT_DB_NAME') else 'estation',
        'USER': os.getenv('DEFAULT_DB_USER') if os.getenv('DEFAULT_DB_USER') else 'docker',
        'PASSWORD': os.getenv('DEFAULT_DB_PASSWORD') if os.getenv('DEFAULT_DB_PASSWORD') else 'docker',
        # 'HOST': os.getenv('DEFAULT_DB_HOST') if os.getenv('DEFAULT_DB_HOST') else '5.101.181.188',
        'HOST': os.getenv('DEFAULT_DB_HOST') if os.getenv('DEFAULT_DB_HOST') else '5.101.181.188',
        'PORT': os.getenv('DEFAULT_DB_PORT') if os.getenv('DEFAULT_DB_PORT') else "8086",
    }
# 'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.getenv('DEFAULT_DB_NAME') if os.getenv('DEFAULT_DB_NAME') else 'db',
#         'USER': os.getenv('DEFAULT_DB_USER') if os.getenv('DEFAULT_DB_USER') else 'rauan',
#         'PASSWORD': os.getenv('DEFAULT_DB_PASSWORD') if os.getenv('DEFAULT_DB_PASSWORD') else 'dontcome',
#         # 'HOST': os.getenv('DEFAULT_DB_HOST') if os.getenv('DEFAULT_DB_HOST') else '5.101.181.188',
#         'HOST': os.getenv('DEFAULT_DB_HOST') if os.getenv('DEFAULT_DB_HOST') else 'localhost',
#         'PORT': os.getenv('DEFAULT_DB_PORT') if os.getenv('DEFAULT_DB_PORT') else "3036",
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 5,
    'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",
    # 'TIME_FORMAT': "%H:%M" if l!="en-us" else "%I:%M %p",
        # '%I:%M %p',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'users.authentication.ExpiringTokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )

}

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Almaty'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
